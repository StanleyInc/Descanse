{"name":"Descanse","tagline":"A really really simple API framework for PHP.","body":"Descanse\r\n========\r\n\r\nA really really simple API framework for PHP.\r\n\r\n## The name\r\n\r\n\"Descanse\" is the Spanish translation for \"rest\".\r\n\r\n## Requirements\r\n\r\nPHP >= 5.3.0\r\n\r\n## Usage\r\n\r\n1. Add the .htaccess file included in this repository. This file redirects all incoming requests to a single dispatcher.\r\n2. Create a dispatcher file (i.e. index.php) that includes the Descanse core.\r\n3. Create a class that has the word \"Service\" as a suffix (UserService, SearchService, etc.).\r\n4. Create a method in that class with a name starting with get, post, put or delete (i.e. getUser, postUser, putUser, deleteUser, etc.). The method must return a PHP type, object or array.\r\n5. Include the Service class in the dispatcher (this is done automatically by default).\r\n6. Tell Descanse to run!\r\n\r\n## A Service Class example\r\n\r\n<code><pre><?php\r\n// user.php\r\nclass UserService {\r\n  public static function getName($context) {\r\n    return array(\"first\" => \"Joel\", \"last\" => \"Villarreal\");\r\n  }\r\n}\r\n?>\r\n</pre></code>\r\n\r\n## The Dispatcher\r\n\r\n<code><pre><?php\r\nrequire \"descanse.php\";\r\nrequire \"user.php\";\r\nDescanse::go();\r\n?></pre></code>\r\n\r\n## Guidelines\r\n\r\n- Descanse creates routes automatically. Thus, UserProfileService becomes /userprofile/, and UserProfileService::getUserData() becomes GET /userprofile/userdata.\r\n- All methods within the Service class must be *static*.\r\n- All methods within the Service class must contain a *$context* argument, which contains an array with two keys: *request* (contains $_REQUEST data) and *args* (contains all of the slugs in the URL beyond the second slash, i.e. if the route is /userprofile/userdata/1/abc/3f, *args* will contain [0] => 1, [1] => abc, [2] => 3f).\r\n- All methods must start with *get*, *post*, *put* or *delete*.\r\n- If you wish to change the default settings of Descanse, you may do so using *Descanse::$settings* before *Descanse::go()*.\r\n- The 'Accept' header defines the API method's output. If Accept is 'application/json', it'll automatically encode the data. **More encoders are underway!**\r\n\r\n## Settings\r\n\r\n- *auto_register*: true to search in all declared classes those whose name ends with \"Service\", false to allow manual registration. To do so, use the *Descanse::registerService($name)** method.\r\n\r\n## License\r\n\r\nDescanse is licensed under the MIT License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}